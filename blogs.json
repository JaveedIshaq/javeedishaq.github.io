{"status":"ok","feed":{"url":"https://medium.com/feed/@javeedishaq","title":"Stories by Javeed Ishaq on Medium","link":"https://medium.com/@javeedishaq?source=rss-913fd837ea4a------2","author":"","description":"Stories by Javeed Ishaq on Medium","image":"https://cdn-images-1.medium.com/fit/c/150/150/1*avW4bmx5LUbFRpPlMIxMeA.jpeg"},"items":[{"title":"Android Learning Resources to keep near you While Learning to Become an Android Developer","pubDate":"2020-11-18 18:31:58","link":"https://javeedishaq.medium.com/android-learning-resources-to-keep-near-you-while-learning-to-become-an-android-developer-931342c9377a?source=rss-913fd837ea4a------2","guid":"https://medium.com/p/931342c9377a","author":"Javeed Ishaq","thumbnail":"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=931342c9377a","description":"\n<h3>Official resources from\u00a0Google</h3>\n<p><a href=\"https://developer.android.com/develop/index.html\">https://developer.android.com/develop/index.html</a> is the site where you can get all the latest information on\u00a0Android.</p>\n<p><a href=\"https://codelabs.developers.google.com/\">https://codelabs.developers.google.com/</a>\u200a\u2014\u200aGoogle Lab. Here you can go through a variety of Android development tutorials, from testing to Android Wear\u00a0apps.</p>\n<p><a href=\"https://android-developers.googleblog.com/\">https://android-developers.googleblog.com</a>\u200a\u2014\u200aOfficial Android Developer Blog.</p>\n<p><a href=\"https://material.io/icons/\">https://material.io/icons/</a>\u200a\u2014\u200aon this site you can find icons from Google for material\u00a0design.</p>\n<p><a href=\"https://github.com/googlesamples\">https://github.com/googlesamples</a>\u200a\u2014\u200aa repository from Google, you can find examples of using different functionality in Android and not\u00a0only.</p>\n<h3>Books</h3>\n<p>There are many books on Android development, but they quickly become outdated, so it\u2019s better to learn from articles or documentation, but there is still one book worthy of attention:</p>\n<p><a href=\"https://commonsware.com/Android/\">https://commonsware.com/Android/</a> is a book that contains, perhaps, everything on Android development and, unlike other books, the information is constantly updated.</p>\n<h3>Third-Party Sites</h3>\n<p><a href=\"http://androidweekly.net/\">http://androidweekly.net/</a> is one of the best aggregators of useful materials for Android developers, collecting articles from all over the Internet from the best Android developers.</p>\n<p><a href=\"https://guides.codepath.com/android\">https://guides.codepath.com/android</a>\u200a\u2014\u200aSite with tutorials on various topics, community filled.</p>\n<h3>Libraries</h3>\n<p><a href=\"https://android-arsenal.com/\">https://android-arsenal.com/</a>\u200a\u2014\u200aan arsenal of useful libraries. If you need to implement something unusual, look here first, most likely someone has already done it before\u00a0you.</p>\n<p><a href=\"https://github.com/wasabeef/awesome-android-ui\">https://github.com/wasabeef/awesome-android-ui</a>\u200a\u2014\u200athere are a lot of useful open source libraries here\u00a0too.</p>\n<h3>Podcasts</h3>\n<p><a href=\"http://fragmentedpodcast.com/\">http://fragmentedpodcast.com/</a>\u200a\u2014\u200aIf you know English, you can also listen to this podcast. If you don\u2019t know, then start learning.</p>\n<h3>Chat rooms</h3>\n<p>Chat rooms where you can ask questions to other Android developers.</p>\n<p>In slack, in English: <a href=\"http://android-united.community/\">http://android-united.community/</a></p>\n<h3>Open source\u00a0projects</h3>\n<p><a href=\"https://github.com/DrKLO/Telegram\">https://github.com/DrKLO/Telegram</a> is one of the best instant messengers.</p>\n<p><a href=\"https://github.com/nickbutcher/plaid\">https://github.com/nickbutcher/plaid</a>\u200a\u2014\u200aaggregator from dribble.com, you can find great examples of animations in applications.</p>\n<h3>Youtube channels</h3>\n<p><a href=\"https://www.youtube.com/channel/UCVHFbqXqoYvEWM1Ddxl0QDg\">https://www.youtube.com/channel/UCVHFbqXqoYvEWM1Ddxl0QDg</a> is Google\u2019s official Android development channel.</p>\n<p><a href=\"https://www.youtube.com/channel/UC_LIW0OUdsRI21D0xnWkexw\">https://www.youtube.com/channel/UC_LIW0OUdsRI21D0xnWkexw</a>\u200a\u2014\u200amaterials from one of the most popular Android conferences\u200a\u2014\u200adroidcon are published here.</p>\n<h3>Stackoverflow</h3>\n<p>And of course Stackoverflow. Here you can find solutions to problems that arise, which most likely someone has solved before\u00a0you.</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/android\">https://stackoverflow.com/questions/tagged/android</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=931342c9377a\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<h3>Official resources from\u00a0Google</h3>\n<p><a href=\"https://developer.android.com/develop/index.html\">https://developer.android.com/develop/index.html</a> is the site where you can get all the latest information on\u00a0Android.</p>\n<p><a href=\"https://codelabs.developers.google.com/\">https://codelabs.developers.google.com/</a>\u200a\u2014\u200aGoogle Lab. Here you can go through a variety of Android development tutorials, from testing to Android Wear\u00a0apps.</p>\n<p><a href=\"https://android-developers.googleblog.com/\">https://android-developers.googleblog.com</a>\u200a\u2014\u200aOfficial Android Developer Blog.</p>\n<p><a href=\"https://material.io/icons/\">https://material.io/icons/</a>\u200a\u2014\u200aon this site you can find icons from Google for material\u00a0design.</p>\n<p><a href=\"https://github.com/googlesamples\">https://github.com/googlesamples</a>\u200a\u2014\u200aa repository from Google, you can find examples of using different functionality in Android and not\u00a0only.</p>\n<h3>Books</h3>\n<p>There are many books on Android development, but they quickly become outdated, so it\u2019s better to learn from articles or documentation, but there is still one book worthy of attention:</p>\n<p><a href=\"https://commonsware.com/Android/\">https://commonsware.com/Android/</a> is a book that contains, perhaps, everything on Android development and, unlike other books, the information is constantly updated.</p>\n<h3>Third-Party Sites</h3>\n<p><a href=\"http://androidweekly.net/\">http://androidweekly.net/</a> is one of the best aggregators of useful materials for Android developers, collecting articles from all over the Internet from the best Android developers.</p>\n<p><a href=\"https://guides.codepath.com/android\">https://guides.codepath.com/android</a>\u200a\u2014\u200aSite with tutorials on various topics, community filled.</p>\n<h3>Libraries</h3>\n<p><a href=\"https://android-arsenal.com/\">https://android-arsenal.com/</a>\u200a\u2014\u200aan arsenal of useful libraries. If you need to implement something unusual, look here first, most likely someone has already done it before\u00a0you.</p>\n<p><a href=\"https://github.com/wasabeef/awesome-android-ui\">https://github.com/wasabeef/awesome-android-ui</a>\u200a\u2014\u200athere are a lot of useful open source libraries here\u00a0too.</p>\n<h3>Podcasts</h3>\n<p><a href=\"http://fragmentedpodcast.com/\">http://fragmentedpodcast.com/</a>\u200a\u2014\u200aIf you know English, you can also listen to this podcast. If you don\u2019t know, then start learning.</p>\n<h3>Chat rooms</h3>\n<p>Chat rooms where you can ask questions to other Android developers.</p>\n<p>In slack, in English: <a href=\"http://android-united.community/\">http://android-united.community/</a></p>\n<h3>Open source\u00a0projects</h3>\n<p><a href=\"https://github.com/DrKLO/Telegram\">https://github.com/DrKLO/Telegram</a> is one of the best instant messengers.</p>\n<p><a href=\"https://github.com/nickbutcher/plaid\">https://github.com/nickbutcher/plaid</a>\u200a\u2014\u200aaggregator from dribble.com, you can find great examples of animations in applications.</p>\n<h3>Youtube channels</h3>\n<p><a href=\"https://www.youtube.com/channel/UCVHFbqXqoYvEWM1Ddxl0QDg\">https://www.youtube.com/channel/UCVHFbqXqoYvEWM1Ddxl0QDg</a> is Google\u2019s official Android development channel.</p>\n<p><a href=\"https://www.youtube.com/channel/UC_LIW0OUdsRI21D0xnWkexw\">https://www.youtube.com/channel/UC_LIW0OUdsRI21D0xnWkexw</a>\u200a\u2014\u200amaterials from one of the most popular Android conferences\u200a\u2014\u200adroidcon are published here.</p>\n<h3>Stackoverflow</h3>\n<p>And of course Stackoverflow. Here you can find solutions to problems that arise, which most likely someone has solved before\u00a0you.</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/android\">https://stackoverflow.com/questions/tagged/android</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=931342c9377a\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["android","androiddev","android-app-development"]},{"title":"How to convert a String into a number in Dart Flutter","pubDate":"2020-10-18 08:06:34","link":"https://javeedishaq.medium.com/how-to-convert-a-string-into-a-number-in-dart-flutter-5b2e7ca12809?source=rss-913fd837ea4a------2","guid":"https://medium.com/p/5b2e7ca12809","author":"Javeed Ishaq","thumbnail":"https://cdn-images-1.medium.com/max/1024/1*6JctXC2XVAODH4541LffuQ.png","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*6JctXC2XVAODH4541LffuQ.png\"></figure><p>Strings are used to make heartbeats Flutter in music. In programming String is a set of Characters. In strongly typed Programming languages there is needed for type conversion to use a string value as a number. As a Flutter developer, my interest is in Dart to make heart Flutter\u00a0:)</p>\n<p>We are going to review the String method used in Dart to convert a String into a Number or Number into a\u00a0String.</p>\n<p>A handy tool by the Dart team <a href=\"https://dartpad.dev/\">Dartpad</a> can be used to run the dart/flutter code in the\u00a0browser.</p>\n<h4>String to\u00a0int</h4>\n<pre>// convert a String to int<br>void main() {<br><br>String aStringValue = \"5\";<br>int number = int.parse(aStringValue);<br>    print(number == 5); // prints true<br>    print(number.runtimeType); // prints int<br>}</pre>\n<h4>String to\u00a0double</h4>\n<pre>// convert a String to double<br>main () {<br><br>    String aStringValue = \"5.2\";<br>    var aDoubelValue = double.parse(aStringValue);<br>    print(aDoubelValue == 5.2); // prints true<br>    print(aDoubelValue.runtimeType); // prints double<br>}</pre>\n<h4>int to\u00a0String</h4>\n<pre>// convert int to String<br>main () {<br>    int aNumberValue = 55;<br><br>    String valueAsString = aNumberValue.toString();<br>    print(valueAsString == '55'); // prints true<br>    print(valueAsString.runtimeType); // prints String<br>}</pre>\n<h4>double to\u00a0String</h4>\n<pre>// convert double to String<br>main () {<br>    double aDoubleValue = 3.14159;<br><br>    String valueAsString = aDoubleValue.toStringAsFixed(2);<br>    print(valueAsString == '3.14'); // prints true<br>    print(valueAsString.runtimeType); // prints String<br>}</pre>\n<p>Dart is an easy to learn Programming Language and it provides a set of features that helps developers to develop apps more\u00a0rapidly.</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=5b2e7ca12809\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*6JctXC2XVAODH4541LffuQ.png\"></figure><p>Strings are used to make heartbeats Flutter in music. In programming String is a set of Characters. In strongly typed Programming languages there is needed for type conversion to use a string value as a number. As a Flutter developer, my interest is in Dart to make heart Flutter\u00a0:)</p>\n<p>We are going to review the String method used in Dart to convert a String into a Number or Number into a\u00a0String.</p>\n<p>A handy tool by the Dart team <a href=\"https://dartpad.dev/\">Dartpad</a> can be used to run the dart/flutter code in the\u00a0browser.</p>\n<h4>String to\u00a0int</h4>\n<pre>// convert a String to int<br>void main() {<br><br>String aStringValue = \"5\";<br>int number = int.parse(aStringValue);<br>    print(number == 5); // prints true<br>    print(number.runtimeType); // prints int<br>}</pre>\n<h4>String to\u00a0double</h4>\n<pre>// convert a String to double<br>main () {<br><br>    String aStringValue = \"5.2\";<br>    var aDoubelValue = double.parse(aStringValue);<br>    print(aDoubelValue == 5.2); // prints true<br>    print(aDoubelValue.runtimeType); // prints double<br>}</pre>\n<h4>int to\u00a0String</h4>\n<pre>// convert int to String<br>main () {<br>    int aNumberValue = 55;<br><br>    String valueAsString = aNumberValue.toString();<br>    print(valueAsString == '55'); // prints true<br>    print(valueAsString.runtimeType); // prints String<br>}</pre>\n<h4>double to\u00a0String</h4>\n<pre>// convert double to String<br>main () {<br>    double aDoubleValue = 3.14159;<br><br>    String valueAsString = aDoubleValue.toStringAsFixed(2);<br>    print(valueAsString == '3.14'); // prints true<br>    print(valueAsString.runtimeType); // prints String<br>}</pre>\n<p>Dart is an easy to learn Programming Language and it provides a set of features that helps developers to develop apps more\u00a0rapidly.</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=5b2e7ca12809\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["flutter","dart"]},{"title":"Dart Const and Final, what is the Difference","pubDate":"2020-09-24 04:54:11","link":"https://javeedishaq.medium.com/dart-const-and-final-what-is-the-difference-9006ca31c961?source=rss-913fd837ea4a------2","guid":"https://medium.com/p/9006ca31c961","author":"Javeed Ishaq","thumbnail":"https://cdn-images-1.medium.com/max/1024/1*74RNfHM2oNe9p3gG3YaAtg.png","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*74RNfHM2oNe9p3gG3YaAtg.png\"><figcaption>Dart has two types of constant values: const is constant from compile-time and final has a constant value in run-time.</figcaption></figure><p>While programming any software, there is always, needed some values to have a fixed value that can not be changed once assigned the\u00a0value.</p>\n<p>Dart provides two keywords for defining constant values <strong>const </strong>and\u00a0<strong>final.</strong></p>\n<p>Developers from Javascript background must know the <strong>const</strong> keyword to declare constant values and Java Developer must know the <strong>final</strong> keyword to define Constant\u00a0values.</p>\n<pre>const String baseUrlGithub = 'https://github.com/';<br>final String baseUrlMedium = 'https://medium.com/'; </pre>\n<pre>baseUrlGithub = 'https://mygithub.com/'; <br>// can not re-assign a value, it will show an error</pre>\n<pre>baseUrlMedium = 'https://mymedium.com/'; <br>// can not re-assign a value, it will show an error</pre>\n<p>It seems interesting to see that Dart provides two keywords to define the constant value, both of these basic usages are the same to define the constant value, this way they look the same but they are not the same. Let\u2019s look into both const and final to know the exact difference and\u00a0usage.</p>\n<h3><strong>final</strong></h3>\n<ul>\n<li>A value can be assigned only\u00a0once.</li>\n<li>final is the <strong>run-time</strong> constant value. It means after compiling executable code these constant values are\u00a0created.</li>\n<li>Final values are redefined when tree structures rebuild themselves or a build method is called. For example on setState final values are redefined.</li>\n<li>Final variables can be defined in a class or function of Dart language.</li>\n<li>\n<strong>Usage: </strong>use<strong> a </strong>final keyword to define constant values When we don\u2019t know the exact value at compile-time, for example, data received from backend over\u00a0API</li>\n</ul>\n<h3><strong>const</strong></h3>\n<ul>\n<li>A value can be assigned only\u00a0once.</li>\n<li>A const is a <strong>compile-time</strong> constant, meaning it is defined and has a constant value at compile-time and the same value is used in\u00a0runtime.</li>\n<li>const values remain the same when tree structures rebuild themselves or a build method is called. For example, setState const values remain the\u00a0same.</li>\n<li>Const value can not be defined in a class but can be defined in a function.</li>\n<li>\n<strong>Usage:</strong> when we are sure that this value will not be changed during run time, use the const keyword to define constant value, for example, app colors, base API URL,\u00a0etc.</li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=9006ca31c961\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*74RNfHM2oNe9p3gG3YaAtg.png\"><figcaption>Dart has two types of constant values: const is constant from compile-time and final has a constant value in run-time.</figcaption></figure><p>While programming any software, there is always, needed some values to have a fixed value that can not be changed once assigned the\u00a0value.</p>\n<p>Dart provides two keywords for defining constant values <strong>const </strong>and\u00a0<strong>final.</strong></p>\n<p>Developers from Javascript background must know the <strong>const</strong> keyword to declare constant values and Java Developer must know the <strong>final</strong> keyword to define Constant\u00a0values.</p>\n<pre>const String baseUrlGithub = 'https://github.com/';<br>final String baseUrlMedium = 'https://medium.com/'; </pre>\n<pre>baseUrlGithub = 'https://mygithub.com/'; <br>// can not re-assign a value, it will show an error</pre>\n<pre>baseUrlMedium = 'https://mymedium.com/'; <br>// can not re-assign a value, it will show an error</pre>\n<p>It seems interesting to see that Dart provides two keywords to define the constant value, both of these basic usages are the same to define the constant value, this way they look the same but they are not the same. Let\u2019s look into both const and final to know the exact difference and\u00a0usage.</p>\n<h3><strong>final</strong></h3>\n<ul>\n<li>A value can be assigned only\u00a0once.</li>\n<li>final is the <strong>run-time</strong> constant value. It means after compiling executable code these constant values are\u00a0created.</li>\n<li>Final values are redefined when tree structures rebuild themselves or a build method is called. For example on setState final values are redefined.</li>\n<li>Final variables can be defined in a class or function of Dart language.</li>\n<li>\n<strong>Usage: </strong>use<strong> a </strong>final keyword to define constant values When we don\u2019t know the exact value at compile-time, for example, data received from backend over\u00a0API</li>\n</ul>\n<h3><strong>const</strong></h3>\n<ul>\n<li>A value can be assigned only\u00a0once.</li>\n<li>A const is a <strong>compile-time</strong> constant, meaning it is defined and has a constant value at compile-time and the same value is used in\u00a0runtime.</li>\n<li>const values remain the same when tree structures rebuild themselves or a build method is called. For example, setState const values remain the\u00a0same.</li>\n<li>Const value can not be defined in a class but can be defined in a function.</li>\n<li>\n<strong>Usage:</strong> when we are sure that this value will not be changed during run time, use the const keyword to define constant value, for example, app colors, base API URL,\u00a0etc.</li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=9006ca31c961\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["flutter","dart"]}]}